module(
    name = "bazel_rules_transmission",
    version = "0.1.0",
)

bazel_dep(name = "rules_foreign_cc", version = "0.15.0")
bazel_dep(name = "openssl", version = "3.3.1.bcr.1")
bazel_dep(name = "curl", version = "8.8.0.bcr.3")
bazel_dep(name = "libevent", version = "2.1.12-stable.bcr.0")
bazel_dep(name = "libdeflate", version = "1.24")

#bazel_dep(name = "toolchains_musl", version = "0.1.27")

bazel_dep(name = "toolchains_llvm", version = "1.4.0")
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
   llvm_version = "19.1.0",
)
use_repo(llvm, "llvm_toolchain")
register_toolchains("@llvm_toolchain//:all")

#bazel_dep(name = "hermetic_cc_toolchain", version = "4.0.1")
#toolchains = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains")
#use_repo(toolchains, "zig_sdk") # No idea why zig is a thing here.
#register_toolchains(
    #"@zig_sdk//toolchain/...",
    #"@zig_sdk//libc_aware/toolchain/...",
#)

git_repository = use_repo_rule(
    "@bazel_tools//tools/build_defs/repo:git.bzl",
    "git_repository")

git_repository(
    name = "transmission",
    #commit = "d6e78d11ea706b6d6bf95042756483a40baf873b",
    commit = "31557e4bc7c7e2cb0913d0aeaac664c165532ce3",
    #remote = "https://github.com/transmission/transmission.git",
    remote = "https://github.com/filmil/transmission.git",
    build_file = "//third_party/transmission:transmission.BUILD.bazel",
    recursive_init_submodules = True,
)

git_repository(
    name = "libnatpmp",
    commit = "134fc89e2781e154e40042641f4d8bcbe42579f1",
    remote = "https://github.com/miniupnp/libnatpmp.git",
    build_file = "//third_party/libnatpmp:libnatpmp.BUILD.bazel",
    recursive_init_submodules = True,
    patch_args = [
        "-p1",
    ],
    patches = [
        "//third_party/libnatpmp:0001-fix-don-t-build-shared-lib.patch",
    ]
)

git_repository(
    name = "libdht",
    commit = "0bbb8f4a5bd914b60de5e9fbb51573aa33a1cf18",
    remote = "https://github.com/jech/dht.git",
    build_file = "//third_party/libdht:libdht.BUILD.bazel",
    recursive_init_submodules = True,
)
